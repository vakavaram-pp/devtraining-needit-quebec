<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>ni_getinfo (v3)</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

// implement resource here


// Get value from the user_name path parameter passed in the URL
var requestUser = request.pathParams.user_name;
// Get value of the ni_query query parameter passed in the URL
var requestNIQuery = request.queryParams.ni_query;

// Query the sys_user table to get the user record for the user passed in
// the user_id path parameter.  
var requestUserName = new GlideRecord('sys_user');
requestUserName.get('user_name',requestUser);

// If there is no user record for the user_name passed in the user_name path parameter,
// return a custom error.  Notice the error object is created from
// sn_ws_err.ServiceError();  If no status value is set, the HTTP Status will
// be 500.
if(!requestUserName.user_name){
	var apiError = new sn_ws_err.ServiceError();
	apiError.setStatus(542);
	apiError.setMessage("User not found");
	apiError.setDetail("No user record found for the user_name passed into the ni_info web service resource using the user_name path parameter.");
	response.setError(apiError);
	return;
}
	
var userId = requestUserName.user_name;
var impUser = new global.AllowGlideImpersonate();
var oldUserId = impUser.impersonate(requestUserName.sys_id);

// Get the count of active NeedIt table records where the user from the
// user_name path parameter is the Requested for.  The encoded query is from the
// Query Parameter Associations.  Group by category.
var userNICount = new GlideAggregate('x_58872_needit_needit');
userNICount.addAggregate('COUNT');
//userNICount.addQuery('u_requested_for',requestUserName.sys_id);
//userNICount.addEncodedQuery(requestNIQuery);
userNICount.groupBy('u_request_type');
userNICount.query();


var needitRecs = 0;
var niUserRecs = [];
var needitRecsCount = 0;

while (userNICount.next()) {
	needitRecs = userNICount.getAggregate('COUNT');
	var reqType = userNICount.u_request_type.getDisplayValue();
	niUserRecs.push({"requestType": reqType, "count": needitRecs});
	needitRecsCount = parseInt(needitRecsCount) + parseInt(needitRecs);
}
	
//Create a body object.  Add property value pairs to the body.
var body = {};
body.totalUserNIRecs = needitRecsCount;
body.catCounts = niUserRecs;
body.user = {"User name": requestUserName.user_name,
"User ID": requestUserName.sys_id};
			
// Send the response object, which is returned to the requestor, to the body object.
response.setBody(body);
	
impUser.impersonate(oldUserId);

})(request, response);]]></operation_script>
        <operation_uri>/api/x_58872_needit/v3/needit_api/nigetinfo/{user_name}</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/nigetinfo/{user_name}</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description>Find the active NeedIt records for a user. Group by What needed.</short_description>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-07-29 03:57:10</sys_created_on>
        <sys_id>6c42294b2fa13010fc8fcc96f699b6c6</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>ni_getinfo (v3)</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_ws_operation_6c42294b2fa13010fc8fcc96f699b6c6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-07-29 05:34:47</sys_updated_on>
        <web_service_definition display_value="NeedIt API">b147cd832f613010fc8fcc96f699b617</web_service_definition>
        <web_service_version display_value="v3">ec42650b2fa13010fc8fcc96f699b6c4</web_service_version>
    </sys_ws_operation>
</record_update>
